const searchIcon=document.querySelector("#search-icon"),hamburguerBtn=document.querySelector(".hamburguer"),brandSelect=document.querySelector("#brand"),yearSelect=document.querySelector("#year"),minPrice=document.querySelector("#min"),maxPrice=document.querySelector("#max"),doorsSelect=document.querySelector("#doors"),transmissionSelect=document.querySelector("#transmission"),colorSelect=document.querySelector("#color"),results=document.querySelector("#results"),searchData={year:"",brand:"",minPrice:"",maxPrice:"",doors:"",transmission:"",color:""};function startApp(){eventListeners(),showCars(cars)}function eventListeners(){searchIcon.addEventListener("click",openSearchbar),hamburguerBtn.addEventListener("click",openNav),window.addEventListener("click",closeOutsideClick),window.addEventListener("scroll",colorHeaderScroll),brandSelect.addEventListener("change",e=>{const c=e.target.value;searchData.brand=c}),yearSelect.addEventListener("change",e=>{const c=e.target.value;searchData.year=c}),minPrice.addEventListener("change",e=>{const c=e.target.value;searchData.minPrice=c}),maxPrice.addEventListener("change",e=>{const c=e.target.value;searchData.maxPrice=c}),doorsSelect.addEventListener("change",e=>{const c=e.target.value;searchData.doors=c}),transmissionSelect.addEventListener("change",e=>{const c=e.target.value;searchData.transmission=c}),colorSelect.addEventListener("change",e=>{const c=e.target.value;searchData.color=c})}function openSearchbar(){const e=document.querySelector("#search-box");e.classList.toggle("search-box--active"),e.classList.toggle("search-box__contenedor")}function openNav(){document.querySelector(".nav").classList.toggle("nav--active")}function closeOutsideClick(e){const c=e.target,t=document.querySelector("#search-box"),n=document.querySelector(".nav");t.classList.contains("search-box--active")&&c!==searchIcon&&!t.contains(c)&&t.classList.remove("search-box--active","search-box__contenedor"),n.classList.contains("nav--active")&&c!==hamburguerBtn&&n.classList.remove("nav--active"),closeOnScroll(n,t)}function closeOnScroll(e,c){window.addEventListener("scroll",()=>{e.classList.remove("nav--active"),c.classList.remove("search-box--active","search-box__contenedor")})}function colorHeaderScroll(){const e=document.querySelector(".header");if(window.scrollY>90)return e.style.backgroundColor="White",void(searchIcon.style.color="Black");e.style.backgroundColor="transparent",searchIcon.style.color="White"}function showCars(e){e.forEach(e=>{const{img:c,year:t,brand:n,model:r,price:a,doors:s,transmission:o}=e,l=`\n        <picture>\n          <source srcset="${c}.avif" type="image/avif" />\n          <source srcset="${c}.webp" type="image/webp" />\n          <img\n            class="car__img"\n            loading="lazy"\n            width="500"\n            height="300"\n            src="${c}.jpg"\n            alt=""\n          />\n        </picture>\n        <span class="car__year">${t}</span>\n        <div class="car__content">\n          <h2 class="car__model">${n} ${r}</h2>\n          <p class="car__price">\n            $${a.toLocaleString()}\n            <i class="bx bxs-star car__price--reviews">(5 Rese√±as)</i>\n          </p>\n          <p class="car__character">\n            <i class="bx bxs-door-open car__icon"></i>\n            ${s} Puertas\n          </p>\n          <p class="car__character">\n            <i class="bx bxs-car car__icon"></i>\n            ${o}\n          </p>\n          <div class="car__btns">\n            <a href="#" class="car__btn">Comprar</a>\n            <a href="#" class="car__details">Ver detalles</a>\n          </div>\n        </div>\n`,i=document.createElement("div");i.classList.add("car"),i.innerHTML=l,results.appendChild(i)}),fillCarsSelects(e)}function fillCarsSelects(e){let c=[],t=[],n=[];e.forEach(e=>{const{brand:r,doors:a,color:s}=e;c.includes(r)||c.push(r),t.includes(a)||t.push(a),n.includes(s)||n.push(s)}),fillYearSelect(),fillSelect(c,brandSelect),fillSelect(t,doorsSelect),fillSelect(n,colorSelect)}function fillYearSelect(){const e=(new Date).getFullYear(),c=e-10;for(let t=e;t>=c;t--){const e=createOption(t);yearSelect.appendChild(e)}}function fillSelect(e,c){e.forEach(e=>{const t=createOption(e);c.appendChild(t)})}function createOption(e){const c=document.createElement("option");return c.value=e,c.textContent=e,c}document.addEventListener("DOMContentLoaded",startApp);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJzZWFyY2hJY29uIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaGFtYnVyZ3VlckJ0biIsImJyYW5kU2VsZWN0IiwieWVhclNlbGVjdCIsIm1pblByaWNlIiwibWF4UHJpY2UiLCJkb29yc1NlbGVjdCIsInRyYW5zbWlzc2lvblNlbGVjdCIsImNvbG9yU2VsZWN0IiwicmVzdWx0cyIsInNlYXJjaERhdGEiLCJ5ZWFyIiwiYnJhbmQiLCJkb29ycyIsInRyYW5zbWlzc2lvbiIsImNvbG9yIiwic3RhcnRBcHAiLCJldmVudExpc3RlbmVycyIsInNob3dDYXJzIiwiY2FycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJvcGVuU2VhcmNoYmFyIiwib3Blbk5hdiIsIndpbmRvdyIsImNsb3NlT3V0c2lkZUNsaWNrIiwiY29sb3JIZWFkZXJTY3JvbGwiLCJlIiwic2VsZWN0ZWRWYWx1ZSIsInRhcmdldCIsInZhbHVlIiwic2VhcmNoQm94IiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwicmVmZXJlbmNlIiwibmF2IiwiY29udGFpbnMiLCJyZW1vdmUiLCJjbG9zZU9uU2Nyb2xsIiwiaGVhZGVyIiwic2Nyb2xsWSIsInN0eWxlIiwiYmFja2dyb3VuZENvbG9yIiwiZm9yRWFjaCIsImNhciIsImltZyIsIm1vZGVsIiwicHJpY2UiLCJjYXJDYXJkIiwidG9Mb2NhbGVTdHJpbmciLCJjYXJIVE1MIiwiY3JlYXRlRWxlbWVudCIsImFkZCIsImlubmVySFRNTCIsImFwcGVuZENoaWxkIiwiZmlsbENhcnNTZWxlY3RzIiwiY2FyQnJhbmRzIiwiY2FyRG9vcnMiLCJjYXJDb2xvcnMiLCJpbmNsdWRlcyIsInB1c2giLCJmaWxsWWVhclNlbGVjdCIsImZpbGxTZWxlY3QiLCJ5ZWFyTWF4IiwiRGF0ZSIsImdldEZ1bGxZZWFyIiwieWVhck1pbiIsImkiLCJvcHRpb24iLCJjcmVhdGVPcHRpb24iLCJjYXJzRGF0YSIsInNlbGVjdEVsZW1lbnQiLCJjYXJE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QUFTcEUsU0FBU21ELGNBQWMsVUFJdEMsT0FIQWlCLEVBQU90QyxNQUFRQSxFQUNmc0MsRUFBT0ssWUFBYzNDLEVBRWRzQyxFQW5PVHBFLFNBQVNxQixpQkFBaUIsbUJBQW9CSiIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBWYXJpYWJsZXMgbmF2ZWdhY2lvblxyXG5jb25zdCBzZWFyY2hJY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3NlYXJjaC1pY29uYCk7XHJcbmNvbnN0IGhhbWJ1cmd1ZXJCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuaGFtYnVyZ3VlcmApO1xyXG5cclxuLy8gVmFyaWFibGVzIGZpbHRybyBkZSBidXNxdWVkYVxyXG5jb25zdCBicmFuZFNlbGVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNicmFuZGApO1xyXG5jb25zdCB5ZWFyU2VsZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3llYXJgKTtcclxuY29uc3QgbWluUHJpY2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjbWluYCk7XHJcbmNvbnN0IG1heFByaWNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI21heGApO1xyXG5jb25zdCBkb29yc1NlbGVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNkb29yc2ApO1xyXG5jb25zdCB0cmFuc21pc3Npb25TZWxlY3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjdHJhbnNtaXNzaW9uYCk7XHJcbmNvbnN0IGNvbG9yU2VsZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2NvbG9yYCk7XHJcblxyXG4vLyBDb250ZW5lZG9yIGRlIHJlc3VsdGFkb3NcclxuY29uc3QgcmVzdWx0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNyZXN1bHRzYCk7XHJcblxyXG5jb25zdCBzZWFyY2hEYXRhID0ge1xyXG4gIHllYXI6IGBgLFxyXG4gIGJyYW5kOiBgYCxcclxuICBtaW5QcmljZTogYGAsXHJcbiAgbWF4UHJpY2U6IGBgLFxyXG4gIGRvb3JzOiBgYCxcclxuICB0cmFuc21pc3Npb246IGBgLFxyXG4gIGNvbG9yOiBgYCxcclxufTtcclxuXHJcbi8vIEV2ZW50b3NcclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihgRE9NQ29udGVudExvYWRlZGAsIHN0YXJ0QXBwKTtcclxuXHJcbmZ1bmN0aW9uIHN0YXJ0QXBwKCkge1xyXG4gIGV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgc2hvd0NhcnMoY2Fycyk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGV2ZW50TGlzdGVuZXJzKCkge1xyXG4gIC8vIEV2ZW50b3MgZGVsIHNlYXJjaEJhciB5IE5hdi5cclxuXHJcbiAgc2VhcmNoSWNvbi5hZGRFdmVudExpc3RlbmVyKGBjbGlja2AsIG9wZW5TZWFyY2hiYXIpO1xyXG4gIGhhbWJ1cmd1ZXJCdG4uYWRkRXZlbnRMaXN0ZW5lcihgY2xpY2tgLCBvcGVuTmF2KTtcclxuXHJcbiAgLy8gQ2VycmFyIGVsIHNlYXJjaGJhciB5IGVsIG5hdiBhbCBoYWNlciBjbGljayBlbiBjdWFscXVpZXIgcGFydGUgZGVsIGRvY3VtZW50by5cclxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihgY2xpY2tgLCBjbG9zZU91dHNpZGVDbGljayk7XHJcbiAgLy8gQ2FtYmlhciBlbCBjb2xvciBkZWwgaGVhZGVyIGFsIGhhY2VyIHNjcm9sbC5cclxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihgc2Nyb2xsYCwgY29sb3JIZWFkZXJTY3JvbGwpO1xyXG5cclxuICAvLyBFdmVudG9zIHBhcmEgZWwgZmlsdHJvIGRlIGLDunNxdWVkYS5cclxuICBicmFuZFNlbGVjdC5hZGRFdmVudExpc3RlbmVyKGBjaGFuZ2VgLCAoZSkgPT4ge1xyXG4gICAgY29uc3Qgc2VsZWN0ZWRWYWx1ZSA9IGUudGFyZ2V0LnZhbHVlO1xyXG5cclxuICAgIHNlYXJjaERhdGEuYnJhbmQgPSBzZWxlY3RlZFZhbHVlO1xyXG4gIH0pO1xyXG5cclxuICB5ZWFyU2VsZWN0LmFkZEV2ZW50TGlzdGVuZXIoYGNoYW5nZWAsIChlKSA9PiB7XHJcbiAgICBjb25zdCBzZWxlY3RlZFZhbHVlID0gZS50YXJnZXQudmFsdWU7XHJcblxyXG4gICAgc2VhcmNoRGF0YS55ZWFyID0gc2VsZWN0ZWRWYWx1ZTtcclxuICB9KTtcclxuXHJcbiAgbWluUHJpY2UuYWRkRXZlbnRMaXN0ZW5lcihgY2hhbmdlYCwgKGUpID0+IHtcclxuICAgIGNvbnN0IHNlbGVjdGVkVmFsdWUgPSBlLnRhcmdldC52YWx1ZTtcclxuXHJcbiAgICBzZWFyY2hEYXRhLm1pblByaWNlID0gc2VsZWN0ZWRWYWx1ZTtcclxuICB9KTtcclxuXHJcbiAgbWF4UHJpY2UuYWRkRXZlbnRMaXN0ZW5lcihgY2hhbmdlYCwgKGUpID0+IHtcclxuICAgIGNvbnN0IHNlbGVjdGVkVmFsdWUgPSBlLnRhcmdldC52YWx1ZTtcclxuXHJcbiAgICBzZWFyY2hEYXRhLm1heFByaWNlID0gc2VsZWN0ZWRWYWx1ZTtcclxuICB9KTtcclxuXHJcbiAgZG9vcnNTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcihgY2hhbmdlYCwgKGUpID0+IHtcclxuICAgIGNvbnN0IHNlbGVjdGVkVmFsdWUgPSBlLnRhcmdldC52YWx1ZTtcclxuXHJcbiAgICBzZWFyY2hEYXRhLmRvb3JzID0gc2VsZWN0ZWRWYWx1ZTtcclxuICB9KTtcclxuXHJcbiAgdHJhbnNtaXNzaW9uU2VsZWN0LmFkZEV2ZW50TGlzdGVuZXIoYGNoYW5nZWAsIChlKSA9PiB7XHJcbiAgICBjb25zdCBzZWxlY3RlZFZhbHVlID0gZS50YXJnZXQudmFsdWU7XHJcblxyXG4gICAgc2VhcmNoRGF0YS50cmFuc21pc3Npb24gPSBzZWxlY3RlZFZhbHVlO1xyXG4gIH0pO1xyXG5cclxuICBjb2xvclNlbGVjdC5hZGRFdmVudExpc3RlbmVyKGBjaGFuZ2VgLCAoZSkgPT4ge1xyXG4gICAgY29uc3Qgc2VsZWN0ZWRWYWx1ZSA9IGUudGFyZ2V0LnZhbHVlO1xyXG5cclxuICAgIHNlYXJjaERhdGEuY29sb3IgPSBzZWxlY3RlZFZhbHVlO1xyXG4gIH0pO1xyXG5cclxuICAvLyBjb25zb2xlLmxvZyhzZWFyY2hEYXRhKTtcclxufVxyXG5cclxuLy8gRnVuY2lvbmVzXHJcbmZ1bmN0aW9uIG9wZW5TZWFyY2hiYXIoKSB7XHJcbiAgY29uc3Qgc2VhcmNoQm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3NlYXJjaC1ib3hgKTtcclxuXHJcbiAgc2VhcmNoQm94LmNsYXNzTGlzdC50b2dnbGUoYHNlYXJjaC1ib3gtLWFjdGl2ZWApO1xyXG4gIHNlYXJjaEJveC5jbGFzc0xpc3QudG9nZ2xlKGBzZWFyY2gtYm94X19jb250ZW5lZG9yYCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9wZW5OYXYoKSB7XHJcbiAgY29uc3QgbmF2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLm5hdmApO1xyXG5cclxuICBuYXYuY2xhc3NMaXN0LnRvZ2dsZShgbmF2LS1hY3RpdmVgKTtcclxufVxyXG5cclxuZnVuY3Rpb24gY2xvc2VPdXRzaWRlQ2xpY2soZSkge1xyXG4gIGNvbnN0IHJlZmVyZW5jZSA9IGUudGFyZ2V0O1xyXG4gIGNvbnN0IHNlYXJjaEJveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNzZWFyY2gtYm94YCk7XHJcbiAgY29uc3QgbmF2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLm5hdmApO1xyXG5cclxuICAvKiBcclxuICAgICAxLSBWZXJpZmljYSBzaSBlbCBzZWFyY2hiYXIgZXN0w6EgYWJpZXJ0by5cclxuICAgICAyLSBSZXZpc2Egc2kgZWwgY2xpY2sgbm8gb2N1cnJpw7MgZW4gZWwgaWNvbm8uIFxyXG4gICAgIDMtIFZlIHNpIGVsIGNsaWNrIG5vIG9jdXJyacOzIGRlbnRybyBkZWwgc2VhcmNoYmFyLlxyXG4gICovXHJcbiAgaWYgKFxyXG4gICAgc2VhcmNoQm94LmNsYXNzTGlzdC5jb250YWlucyhgc2VhcmNoLWJveC0tYWN0aXZlYCkgJiZcclxuICAgIHJlZmVyZW5jZSAhPT0gc2VhcmNoSWNvbiAmJlxyXG4gICAgIXNlYXJjaEJveC5jb250YWlucyhyZWZlcmVuY2UpXHJcbiAgKSB7XHJcbiAgICAvLyBDaWVycmEgZWwgc2VhcmNoQmFyIGFsIGVsaW1pbmFyIGxhIGNsYXNlIHF1ZSBsbyBoYWNlIHZpc2libGVcclxuICAgIHNlYXJjaEJveC5jbGFzc0xpc3QucmVtb3ZlKGBzZWFyY2gtYm94LS1hY3RpdmVgLCBgc2VhcmNoLWJveF9fY29udGVuZWRvcmApO1xyXG4gIH1cclxuXHJcbiAgLyogXHJcbiAgICAxLSBWZXJpZmljYSBzaSBsYSBjbGFzZSBgbmF2LS1hY3RpdmVgIGV4aXN0ZS5cclxuICAgIDItIFJldmlzYSBzaSBlbCBjbGljayBubyBvY3VycmnDsyBlbiBlbCBib3RvbiBoYW1idXJndWVzYS5cclxuICAqL1xyXG4gIGlmIChuYXYuY2xhc3NMaXN0LmNvbnRhaW5zKGBuYXYtLWFjdGl2ZWApICYmIHJlZmVyZW5jZSAhPT0gaGFtYnVyZ3VlckJ0bikge1xyXG4gICAgbmF2LmNsYXNzTGlzdC5yZW1vdmUoYG5hdi0tYWN0aXZlYCk7XHJcbiAgfVxyXG5cclxuICBjbG9zZU9uU2Nyb2xsKG5hdiwgc2VhcmNoQm94KTtcclxufVxyXG5cclxuZnVuY3Rpb24gY2xvc2VPblNjcm9sbChuYXYsIHNlYXJjaEJveCkge1xyXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKGBzY3JvbGxgLCAoKSA9PiB7XHJcbiAgICBuYXYuY2xhc3NMaXN0LnJlbW92ZShgbmF2LS1hY3RpdmVgKTtcclxuICAgIHNlYXJjaEJveC5jbGFzc0xpc3QucmVtb3ZlKGBzZWFyY2gtYm94LS1hY3RpdmVgLCBgc2VhcmNoLWJveF9fY29udGVuZWRvcmApO1xyXG4gIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjb2xvckhlYWRlclNjcm9sbCgpIHtcclxuICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuaGVhZGVyYCk7XHJcbiAgY29uc3Qgc2Nyb2xsUG9zaXRpb24gPSB3aW5kb3cuc2Nyb2xsWTtcclxuXHJcbiAgaWYgKHNjcm9sbFBvc2l0aW9uID4gOTApIHtcclxuICAgIGhlYWRlci5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIldoaXRlXCI7XHJcbiAgICBzZWFyY2hJY29uLnN0eWxlLmNvbG9yID0gYEJsYWNrYDtcclxuXHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBoZWFkZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYHRyYW5zcGFyZW50YDtcclxuICBzZWFyY2hJY29uLnN0eWxlLmNvbG9yID0gYFdoaXRlYDtcclxufVxyXG5cclxuZnVuY3Rpb24gc2hvd0NhcnMoY2Fycykge1xyXG4gIGNhcnMuZm9yRWFjaCgoY2FyKSA9PiB7XHJcbiAgICBjb25zdCB7IGltZywgeWVhciwgYnJhbmQsIG1vZGVsLCBwcmljZSwgZG9vcnMsIHRyYW5zbWlzc2lvbiB9ID0gY2FyO1xyXG4gICAgY29uc3QgY2FyQ2FyZCA9IGBcclxuICAgICAgICA8cGljdHVyZT5cclxuICAgICAgICAgIDxzb3VyY2Ugc3Jjc2V0PVwiJHtpbWd9LmF2aWZcIiB0eXBlPVwiaW1hZ2UvYXZpZlwiIC8+XHJcbiAgICAgICAgICA8c291cmNlIHNyY3NldD1cIiR7aW1nfS53ZWJwXCIgdHlwZT1cImltYWdlL3dlYnBcIiAvPlxyXG4gICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICBjbGFzcz1cImNhcl9faW1nXCJcclxuICAgICAgICAgICAgbG9hZGluZz1cImxhenlcIlxyXG4gICAgICAgICAgICB3aWR0aD1cIjUwMFwiXHJcbiAgICAgICAgICAgIGhlaWdodD1cIjMwMFwiXHJcbiAgICAgICAgICAgIHNyYz1cIiR7aW1nfS5qcGdcIlxyXG4gICAgICAgICAgICBhbHQ9XCJcIlxyXG4gICAgICAgICAgLz5cclxuICAgICAgICA8L3BpY3R1cmU+XHJcbiAgICAgICAgPHNwYW4gY2xhc3M9XCJjYXJfX3llYXJcIj4ke3llYXJ9PC9zcGFuPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjYXJfX2NvbnRlbnRcIj5cclxuICAgICAgICAgIDxoMiBjbGFzcz1cImNhcl9fbW9kZWxcIj4ke2JyYW5kfSAke21vZGVsfTwvaDI+XHJcbiAgICAgICAgICA8cCBjbGFzcz1cImNhcl9fcHJpY2VcIj5cclxuICAgICAgICAgICAgJCR7cHJpY2UudG9Mb2NhbGVTdHJpbmcoKX1cclxuICAgICAgICAgICAgPGkgY2xhc3M9XCJieCBieHMtc3RhciBjYXJfX3ByaWNlLS1yZXZpZXdzXCI+KDUgUmVzZcOxYXMpPC9pPlxyXG4gICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgPHAgY2xhc3M9XCJjYXJfX2NoYXJhY3RlclwiPlxyXG4gICAgICAgICAgICA8aSBjbGFzcz1cImJ4IGJ4cy1kb29yLW9wZW4gY2FyX19pY29uXCI+PC9pPlxyXG4gICAgICAgICAgICAke2Rvb3JzfSBQdWVydGFzXHJcbiAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICA8cCBjbGFzcz1cImNhcl9fY2hhcmFjdGVyXCI+XHJcbiAgICAgICAgICAgIDxpIGNsYXNzPVwiYnggYnhzLWNhciBjYXJfX2ljb25cIj48L2k+XHJcbiAgICAgICAgICAgICR7dHJhbnNtaXNzaW9ufVxyXG4gICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImNhcl9fYnRuc1wiPlxyXG4gICAgICAgICAgICA8YSBocmVmPVwiI1wiIGNsYXNzPVwiY2FyX19idG5cIj5Db21wcmFyPC9hPlxyXG4gICAgICAgICAgICA8YSBocmVmPVwiI1wiIGNsYXNzPVwiY2FyX19kZXRhaWxzXCI+VmVyIGRldGFsbGVzPC9hPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbmA7XHJcblxyXG4gICAgY29uc3QgY2FySFRNTCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYGRpdmApO1xyXG4gICAgY2FySFRNTC5jbGFzc0xpc3QuYWRkKGBjYXJgKTtcclxuICAgIGNhckhUTUwuaW5uZXJIVE1MID0gY2FyQ2FyZDtcclxuXHJcbiAgICByZXN1bHRzLmFwcGVuZENoaWxkKGNhckhUTUwpO1xyXG4gIH0pO1xyXG5cclxuICBmaWxsQ2Fyc1NlbGVjdHMoY2Fycyk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZpbGxDYXJzU2VsZWN0cyhjYXJzKSB7XHJcbiAgbGV0IGNhckJyYW5kcyA9IFtdO1xyXG4gIGxldCBjYXJEb29ycyA9IFtdO1xyXG4gIGxldCBjYXJDb2xvcnMgPSBbXTtcclxuXHJcbiAgY2Fycy5mb3JFYWNoKChjYXIpID0+IHtcclxuICAgIGNvbnN0IHsgYnJhbmQsIGRvb3JzLCBjb2xvciB9ID0gY2FyO1xyXG5cclxuICAgIGlmICghY2FyQnJhbmRzLmluY2x1ZGVzKGJyYW5kKSkge1xyXG4gICAgICBjYXJCcmFuZHMucHVzaChicmFuZCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCFjYXJEb29ycy5pbmNsdWRlcyhkb29ycykpIHtcclxuICAgICAgY2FyRG9vcnMucHVzaChkb29ycyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCFjYXJDb2xvcnMuaW5jbHVkZXMoY29sb3IpKSB7XHJcbiAgICAgIGNhckNvbG9ycy5wdXNoKGNvbG9yKTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgZmlsbFllYXJTZWxlY3QoKTtcclxuICBmaWxsU2VsZWN0KGNhckJyYW5kcywgYnJhbmRTZWxlY3QpO1xyXG4gIGZpbGxTZWxlY3QoY2FyRG9vcnMsIGRvb3JzU2VsZWN0KTtcclxuICBmaWxsU2VsZWN0KGNhckNvbG9ycywgY29sb3JTZWxlY3QpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBmaWxsWWVhclNlbGVjdCgpIHtcclxuICBjb25zdCB5ZWFyTWF4ID0gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpO1xyXG4gIGNvbnN0IHllYXJNaW4gPSB5ZWFyTWF4IC0gMTA7XHJcblxyXG4gIGZvciAobGV0IGkgPSB5ZWFyTWF4OyBpID49IHllYXJNaW47IGktLSkge1xyXG4gICAgY29uc3Qgb3B0aW9uID0gY3JlYXRlT3B0aW9uKGkpO1xyXG4gICAgeWVhclNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gZmlsbFNlbGVjdChjYXJzRGF0YSwgc2VsZWN0RWxlbWVudCkge1xyXG4gIGNhcnNEYXRhLmZvckVhY2goKGNhckRhdGEpID0+IHtcclxuICAgIGNvbnN0IG9wdGlvbiA9IGNyZWF0ZU9wdGlvbihjYXJEYXRhKTtcclxuICAgIHNlbGVjdEVsZW1lbnQuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlT3B0aW9uKHZhbHVlKSB7XHJcbiAgY29uc3Qgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChgb3B0aW9uYCk7XHJcbiAgb3B0aW9uLnZhbHVlID0gdmFsdWU7XHJcbiAgb3B0aW9uLnRleHRDb250ZW50ID0gdmFsdWU7XHJcblxyXG4gIHJldHVybiBvcHRpb247XHJcbn1cclxuIl19
