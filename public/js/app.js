const searchIcon=document.querySelector("#search-icon"),hamburguerBtn=document.querySelector(".hamburguer"),brandSelect=document.querySelector("#brand"),yearSelect=document.querySelector("#year"),minPrice=document.querySelector("#min"),maxPrice=document.querySelector("#max"),doorsSelect=document.querySelector("#doors"),transmissionSelect=document.querySelector("#transmission"),colorSelect=document.querySelector("#color"),results=document.querySelector("#results"),searchData={year:"",brand:"",minPrice:"",maxPrice:"",doors:"",transmission:"",color:""};function startApp(){eventListeners(),showCars(cars),fillYearSelect()}function eventListeners(){searchIcon.addEventListener("click",openSearchbar),hamburguerBtn.addEventListener("click",openNav),window.addEventListener("click",closeOutsideClick),window.addEventListener("scroll",colorHeaderScroll),brandSelect.addEventListener("change",e=>{const c=e.target.value;searchData.brand=c}),yearSelect.addEventListener("change",e=>{const c=e.target.value;searchData.year=c}),minPrice.addEventListener("change",e=>{const c=e.target.value;searchData.minPrice=c}),maxPrice.addEventListener("change",e=>{const c=e.target.value;searchData.maxPrice=c}),doorsSelect.addEventListener("change",e=>{const c=e.target.value;searchData.doors=c}),transmissionSelect.addEventListener("change",e=>{const c=e.target.value;searchData.transmission=c}),colorSelect.addEventListener("change",e=>{const c=e.target.value;searchData.color=c})}function openSearchbar(){const e=document.querySelector("#search-box");e.classList.toggle("search-box--active"),e.classList.toggle("search-box__contenedor")}function openNav(){document.querySelector(".nav").classList.toggle("nav--active")}function closeOutsideClick(e){const c=e.target,t=document.querySelector("#search-box"),a=document.querySelector(".nav");t.classList.contains("search-box--active")&&c!==searchIcon&&!t.contains(c)&&t.classList.remove("search-box--active","search-box__contenedor"),a.classList.contains("nav--active")&&c!==hamburguerBtn&&a.classList.remove("nav--active"),closeOnScroll(a,t)}function closeOnScroll(e,c){window.addEventListener("scroll",()=>{e.classList.remove("nav--active"),c.classList.remove("search-box--active","search-box__contenedor")})}function colorHeaderScroll(){const e=document.querySelector(".header");if(window.scrollY>90)return e.style.backgroundColor="White",void(searchIcon.style.color="Black");e.style.backgroundColor="transparent",searchIcon.style.color="White"}function showCars(e){e.forEach(e=>{const{img:c,year:t,brand:a,model:n,price:r,doors:s,transmission:o}=e,l=`\n        <picture>\n          <source srcset="${c}.avif" type="image/avif" />\n          <source srcset="${c}.webp" type="image/webp" />\n          <img\n            class="car__img"\n            loading="lazy"\n            width="500"\n            height="300"\n            src="${c}.jpg"\n            alt=""\n          />\n        </picture>\n        <span class="car__year">${t}</span>\n        <div class="car__content">\n          <h2 class="car__model">${a} ${n}</h2>\n          <p class="car__price">\n            $${r.toLocaleString()}\n            <i class="bx bxs-star car__price--reviews">(5 Rese√±as)</i>\n          </p>\n          <p class="car__character">\n            <i class="bx bxs-door-open car__icon"></i>\n            ${s} Puertas\n          </p>\n          <p class="car__character">\n            <i class="bx bxs-car car__icon"></i>\n            ${o}\n          </p>\n          <div class="car__btns">\n            <a href="#" class="car__btn">Comprar</a>\n            <a href="#" class="car__details">Ver detalles</a>\n          </div>\n        </div>\n`,i=document.createElement("div");i.classList.add("car"),i.innerHTML=l,results.appendChild(i)}),fillBrandsSelect(e)}function fillBrandsSelect(e){e.forEach(e=>{const{brand:c}=e;if(!Array.from(brandSelect.options).map(e=>e.value).includes(c)){const e=document.createElement("option");e.value=c,e.textContent=c,brandSelect.appendChild(e)}})}function fillYearSelect(){const e=(new Date).getFullYear(),c=e-10;for(let t=e;t>=c;t--){const e=document.createElement("option");e.value=t,e.textContent=t,yearSelect.appendChild(e)}}document.addEventListener("DOMContentLoaded",startApp);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
