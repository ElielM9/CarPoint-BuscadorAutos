const searchIcon=document.querySelector("#search-icon"),hamburguerBtn=document.querySelector(".hamburguer"),brandSelect=document.querySelector("#brand"),yearSelect=document.querySelector("#year"),minPrice=document.querySelector("#min"),maxPrice=document.querySelector("#max"),doorsSelect=document.querySelector("#doors"),transmissionSelect=document.querySelector("#transmission"),colorSelect=document.querySelector("#color"),results=document.querySelector("#results"),searchData={year:"",brand:"",minPrice:"",maxPrice:"",doors:"",transmission:"",color:""};function startApp(){eventListeners(),showCars(cars),fillCarsSelects(cars)}function eventListeners(){searchIcon.addEventListener("click",openSearchbar),hamburguerBtn.addEventListener("click",openNav),window.addEventListener("click",closeOutsideClick),window.addEventListener("scroll",colorHeaderScroll),brandSelect.addEventListener("change",e=>{const r=e.target.value;searchData.brand=r,filterCar()}),yearSelect.addEventListener("change",e=>{const r=parseInt(e.target.value);searchData.year=r,filterCar()}),minPrice.addEventListener("change",e=>{const r=e.target.value;searchData.minPrice=r,filterCar()}),maxPrice.addEventListener("change",e=>{const r=e.target.value;searchData.maxPrice=r,filterCar()}),doorsSelect.addEventListener("change",e=>{const r=e.target.value;searchData.doors=r,filterCar()}),transmissionSelect.addEventListener("change",e=>{const r=e.target.value;searchData.transmission=r,filterCar()}),colorSelect.addEventListener("change",e=>{const r=e.target.value;searchData.color=r,filterCar()})}function openSearchbar(){const e=document.querySelector("#search-box");e.classList.toggle("search-box--active"),e.classList.toggle("search-box__contenedor")}function openNav(){document.querySelector(".nav").classList.toggle("nav--active")}function closeOutsideClick(e){const r=e.target,t=document.querySelector("#search-box"),n=document.querySelector(".nav");t.classList.contains("search-box--active")&&r!==searchIcon&&!t.contains(r)&&t.classList.remove("search-box--active","search-box__contenedor"),n.classList.contains("nav--active")&&r!==hamburguerBtn&&n.classList.remove("nav--active"),closeOnScroll(n,t)}function closeOnScroll(e,r){window.addEventListener("scroll",()=>{e.classList.remove("nav--active"),r.classList.remove("search-box--active","search-box__contenedor")})}function colorHeaderScroll(){const e=document.querySelector(".header"),r=window.scrollY;e.classList.toggle("header__bg",r>100)}function showCars(e){cleanHTML(),e.forEach(e=>{const{img:r,year:t,brand:n,model:a,price:c,doors:s,transmission:o}=e;let i=Math.floor(100*Math.random());const l=`\n        <picture>\n          <source srcset="${r}.avif" type="image/avif" />\n          <source srcset="${r}.webp" type="image/webp" />\n          <img\n            class="car__img"\n            loading="lazy"\n            width="500"\n            height="300"\n            src="${r}.jpg"\n            alt=""\n          />\n        </picture>\n        <span class="car__year">${t}</span>\n        <div class="car__content">\n          <h2 class="car__model">${n} ${a}</h2>\n          <p class="car__price">\n            $${c.toLocaleString()}\n            <i class="bx bxs-star car__price--reviews">(${i} Rese√±as)</i>\n          </p>\n          <p class="car__character">\n            <i class="bx bxs-door-open car__icon"></i>\n            ${s} Puertas\n          </p>\n          <p class="car__character">\n            <i class="bx bxs-car car__icon"></i>\n            ${o}\n          </p>\n          <div class="car__btns">\n            <a href="#" class="car__btn">Comprar</a>\n            <a href="#" class="car__details">Ver detalles</a>\n          </div>\n        </div>\n`,d=document.createElement("div");d.classList.add("car"),d.innerHTML=l,results.appendChild(d)})}function cleanHTML(){for(;results.firstChild;)results.removeChild(results.firstChild)}function fillCarsSelects(e){fillSelect(e.map(({brand:e})=>e).filter((e,r,t)=>t.indexOf(e)===r),brandSelect),fillSelect(e.map(({doors:e})=>e).filter((e,r,t)=>t.indexOf(e)===r),doorsSelect),fillSelect(e.map(({color:e})=>e).filter((e,r,t)=>t.indexOf(e)===r),colorSelect),fillYearSelect()}function fillYearSelect(){const e=(new Date).getFullYear(),r=e-10;for(let t=e;t>=r;t--){const e=createOption(t);yearSelect.appendChild(e)}}function fillSelect(e,r){e.forEach(e=>{const t=createOption(e);r.appendChild(t)})}function createOption(e){const r=document.createElement("option");return r.value=e,r.textContent=e,r}function filterCar(){const e=cars.filter(filterBrand).filter(filterYear).filter(filterPrice).filter(filterDoors).filter(filterTransmission).filter(filterColor);e.length?showCars(e):noResults()}function noResults(){cleanHTML();const e=document.createElement("p");e.classList.add("alerta","error"),e.textContent="No se encontraron resultados, prueba de nuevo",results.appendChild(e)}function filterBrand(e){const{brand:r}=searchData;return r?e.brand===r:e}function filterYear(e){const{year:r}=searchData;return r?e.year===r:e}function filterPrice(e){const{minPrice:r,maxPrice:t}=searchData;return r&&t?e.price>=r&&e.price<=t:r?e.price>=r:t?e.price<=t:e}function filterDoors(e){const{doors:r}=searchData;return r?e.doors===parseInt(r):e}function filterTransmission(e){const{transmission:r}=searchData;return r?e.transmission.toLowerCase()==r:e}function filterColor(e){const{color:r}=searchData;return r?e.color===r:e}document.addEventListener("DOMContentLoaded",startApp);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
